<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oc.md.mapper.ManageMapper">
	<!-- 1대1 문의 전체 게시판 -->
	<select id="selectInquiryPage" resultType="QNA" parameterType="PagingVO">
		<![CDATA[
		select * from (select ROWNUM rnum, aa.* from(
		select * from QNA ) aa) 
		where rnum between #{start} and #{last}
		]]>
	</select>
	<select id="inquiryCount" resultType="long" >
	select COUNT(q_idx) from QNA
	</select>
	<!-- 1대1 문의 카테고리 검색 게시판 -->
	<!-- 컬럼을 변수로 두고 사용하고자 할 경우(문자열 대체) ${}로 사용해야 한다 -->
	<select id="selectCategoryInquiry" resultType="QNA" parameterType="PagingVO">
		<![CDATA[
		select * from (select ROWNUM rnum, aa.* from(
		select * from QNA where ${category} like '%'||#{sort}||'%') aa) 
		where rnum between #{start} and #{last}
		]]> 
	</select>
	<select id="inquiryCatCount" resultType="long" parameterType="PagingVO">
		select COUNT(q_idx) from QNA where ${category} like '%'||#{sort}||'%'
	</select>
	<select id="todayPayAmount" resultType="SalesChkVO">
		select NVL(sum(pay_price),0) as sum_price from payment where pay_date like to_char(SYSDATE)
	</select>
	<select id="userRefundCount" resultType="SalesChkVO">
		select count(delivery_state) as thscount  from delivery dl join order_main om on dl.delivery_idx=om.delivery_idx where delivery_state like '환불요청중'
	</select>
	<select id="qnaIsNullCount" resultType="SalesChkVO">
		select count(*) as varcount  from QNA where q_reply is null
	</select>
	<select id="todayPayCount" resultType="SalesChkVO">
		select count(*) as today_paycount from payment where pay_date like to_char(SYSDATE)
	</select>
	<!-- 매출확인(당일날 최대 매출 재료 확인) -->
	<select id="todayMostSales" resultType="SalesChkVO">
<!-- 		select ol.f_name,COUNT(ol.f_name) as sales_fcount from PAYMENT py join order_list ol on py.order_idx=ol.order_idx where py.pay_date like (select to_char(SYSDATE, 'YY/MM/DD') from dual) group by ol.f_name -->
	 	select * from (select ROWNUM rnum, aa.* from(
	 	select ol.f_name,sum(ol.totalcount) as sales_fcount from (select * from PAYMENT py where py.pay_date like SYSDATE) pd join order_list ol on pd.order_idx = ol.order_idx group by ol.f_name order by sales_fcount desc
		) aa) where rnum between 1 and 5
	</select>
	<!-- 월별 요일별 매출 수 확인(당월) -->
	<select id="thsMonthMostSales" resultType="SalesChkVO">
		select to_char(pay_date, 'YY/MM/DD') as thsdate,count(pay_date) thscount from PAYMENT where pay_date between (select TRUNC(sysdate,'MM') from DUAL) and (select LAST_DAY(sysdate) from DUAL) group by to_char(pay_date, 'YY/MM/DD') order by thsdate asc
	</select>
	<!-- 당일날 총 판매금액 -->
	<select id="todayAllPayment" resultType="long">
		select NVL(sum(pay_price),0) as pay_price from payment where pay_date like to_char(SYSDATE)
	</select>
	<!-- 매출확인(당일날 최대 매출 재료 의 기타등등 수) -->
	<select id="etcFood" resultType="SalesChkVO">
		select NVL(sum(sales_fcount),0) as sum_price from (select ROWNUM rnum, aa.* from(
		select ol.f_name,sum(ol.totalcount) as sales_fcount from (select * from PAYMENT py where py.pay_date like SYSDATE) pd join order_list ol on pd.order_idx = ol.order_idx group by ol.f_name order by sales_fcount desc
		) aa) where rnum between 6 and 10
	</select>
	<!-- 월별 요일별 특정 월의 월별매출 수 확인(where 절로 특정 월을 입력) -->
	<select id="vartMonthMostSales" resultType="SalesChkVO" parameterType="String">
		select to_char(pay_date, 'YY/MM/DD') as vardate,COUNT(pay_date) as varcount from 
		PAYMENT where pay_date between (select TRUNC((select LAST_DAY(#{vardate}) from DUAL), 'MM') from DUAL) and (select LAST_DAY(#{vardate}) from DUAL) 
		group by to_char(pay_date, 'YY/MM/DD') order by vardate
	</select>
	<!-- 특정 달의 매출 금액 확인하기(where 절로 특정 월을 입력) -->
	<select id="varDatePaymentMostSales" resultType="SalesChkVO" parameterType="String">
		select to_char(pay_date, 'YY/MM/DD') as vardate,SUM(pay_price) as sum_price from 
		PAYMENT where pay_date between (select TRUNC((select LAST_DAY(#{vardate}) from DUAL), 'MM') from DUAL) and (select LAST_DAY(#{vardate}) from DUAL) 
		group by to_char(pay_date, 'YY/MM/DD') order by vardate
	</select>
	<!-- 특정 주간 매출 확인 -->
	<select id="varWeekPaymentMostSales" resultType="SalesChkVO" parameterType="String">
		<![CDATA[
		select TO_DATE(pay_date,'YY/MM/DD') as thsdate ,sum(pay_price) as sum_price from payment where pay_date>=(select  TO_CHAR(TRUNC(TO_DATE(#{vardate}, 'YY/MM/DD'),'iw')  ,'yy/mm/dd') mon from dual)
		and pay_date<=(select  TO_CHAR(TRUNC(TO_DATE(#{vardate}, 'YY/MM/DD'),'iw') +7  ,'yy/mm/dd') mon from dual) group by TO_DATE(pay_date,'YY/MM/DD')		]]>
		order by thsdate asc
	</select>
	<select id="varWeekMostSales" resultType="SalesChkVO" parameterType="String">
		<![CDATA[
		select TO_DATE(pay_date,'YY/MM/DD') as thsdate ,COUNT(pay_price) as varcount from payment where pay_date>=(select  TO_CHAR(TRUNC(TO_DATE(#{vardate}, 'YY/MM/DD'),'iw')  ,'yy/mm/dd') mon from dual)
		and pay_date<=(select  TO_CHAR(TRUNC(TO_DATE(#{vardate}, 'YY/MM/DD'),'iw') +7  ,'yy/mm/dd') mon from dual) group by TO_DATE(pay_date,'YY/MM/DD')	
		order by thsdate asc
		]]>
	</select>
	<!-- 재고확인 -->
	 <select id="selectByFood_stock_check" resultType="Stock_check" parameterType="PagingVO"> 
 	    <![CDATA[
		select * from (select ROWNUM rnum, aa.* from (select * from FOOD order by f_name desc) aa) 
		where rnum between #{start} and #{last}
		]]>
 	</select>
 	<select id="selectByFood_stock_checkS_asc" resultType="Stock_check" parameterType="PagingVO"> 
 	    <![CDATA[
		select * from (select ROWNUM rnum, aa.* from (select * from FOOD order by f_count asc) aa) 
		where rnum between #{start} and #{last}
		]]>
 	</select>
 	<select id="selectByFood_stock_checkS_desc" resultType="Stock_check" parameterType="PagingVO"> 
 	    <![CDATA[
		select * from (select ROWNUM rnum, aa.* from (select * from FOOD order by f_count desc) aa) 
		where rnum between #{start} and #{last}
		]]>
 	</select>
	
	<select id="selectCount" resultType="long">
		select COUNT(f_name) from FOOD
	</select>
	<!-- 주문 상태 확인 및 변경 -->
	<!-- 전체 카테고리 리스트 -->
	<select id="orderList" resultType="Order_main" parameterType="PagingVO">
		<![CDATA[
		select * from (select ROWNUM rnum, aa.* from 
		(select p.order_idx, p.email, p.pay_date, o.delivery_idx, o.order_date, o.order_state, d.delivery_state, d.delivery_num, o.order_addr
		from payment p, order_main o, delivery d where p.order_idx = o.order_idx and o.delivery_idx = d.delivery_idx order by o.order_date desc) aa) 
		where rnum between #{start} and #{last}
		]]>
	</select>
	<select id="count" resultType="long">
		select COUNT(order_idx) from ORDER_MAIN
	</select>
	
	<!-- 주문상태 카테고리 선택 -->
	<select id="orderListSelect" resultType="Order_main" parameterType="PagingVO">
		<![CDATA[
		select * from (select ROWNUM rnum, aa.* from 
		(select p.order_idx, p.email, p.pay_date, o.delivery_idx, o.order_date, o.order_state, d.delivery_state, d.delivery_num, o.order_addr
		from payment p, order_main o, delivery d where p.order_idx = o.order_idx and o.delivery_idx = d.delivery_idx
		and d.delivery_state = #{select} order by o.order_date desc) aa) 
		where rnum between #{start} and #{last}
		]]>
	</select>
	<select id="countSelect" resultType="long" parameterType="String">
		select COUNT(delivery_idx) from delivery where delivery_state = #{select}
	</select>
	
	<update id="updateDelivery" parameterType="Delivery">
		update DELIVERY set DELIVERY_DATE = SYSDATE, DELIVERY_NUM = #{delivery_num}, DELIVERY_STATE = #{delivery_state} where DELIVERY_IDX = #{delivery_idx}
	</update>
	
	<!-- 환불요청 시 환불완료로 변환 -->
	<update id="updateRefundOrder" parameterType="long">
		update order_main set order_state = 0 where delivery_idx = #{delivery_idx}
	</update>
	<update id="updateRefundDeli" parameterType="long">
		update delivery set delivery_state='환불완료' where delivery_idx = #{delivery_idx}
	</update>
	
</mapper>